
	
	############################################################################
				Configuração do beans.xml referente aos novos serviços.
	############################################################################
	<jaxrs:server id="services" address="/">
		<jaxrs:serviceBeans>
				<bean class="br.com.jsetup.app.rs.DepartmentResources" />
		<bean class="br.com.jsetup.app.rs.MovieResources" />
		<bean class="br.com.jsetup.app.rs.GenreResources" />
		<bean class="br.com.jsetup.app.rs.MovieCastResources" />
		<bean class="br.com.jsetup.app.rs.LanguageResources" />
		<bean class="br.com.jsetup.app.rs.CountryResources" />
		<bean class="br.com.jsetup.app.rs.KeywordResources" />
		<bean class="br.com.jsetup.app.rs.GenderResources" />
		<bean class="br.com.jsetup.app.rs.MovieCrewResources" />
		<bean class="br.com.jsetup.app.rs.CompanyResources" />
		<bean class="br.com.jsetup.app.rs.PersonResources" />
		<bean class="br.com.jsetup.app.rs.UserResources" />
		<bean class="br.com.jsetup.app.rs.RoleResources" />
		<bean class="br.com.jsetup.app.rs.PermissionResources" />
		<bean class="br.com.jsetup.app.rs.GroupResources" />
		<bean class="br.com.jsetup.app.rs.ItemResources" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
		</jaxrs:providers>
	</jaxrs:server>
	
	
	############################################################################
						Router para as entidades criadas
	############################################################################

		var PageDepartment = require('views/department/PageDepartment');
		var FormDepartment = require('views/department/FormDepartment');
		var DepartmentModel = require('models/DepartmentModel');
		var PageMovie = require('views/movie/PageMovie');
		var FormMovie = require('views/movie/FormMovie');
		var MovieModel = require('models/MovieModel');
		var PageGenre = require('views/genre/PageGenre');
		var FormGenre = require('views/genre/FormGenre');
		var GenreModel = require('models/GenreModel');
		var PageMovieCast = require('views/movieCast/PageMovieCast');
		var FormMovieCast = require('views/movieCast/FormMovieCast');
		var MovieCastModel = require('models/MovieCastModel');
		var PageLanguage = require('views/language/PageLanguage');
		var FormLanguage = require('views/language/FormLanguage');
		var LanguageModel = require('models/LanguageModel');
		var PageCountry = require('views/country/PageCountry');
		var FormCountry = require('views/country/FormCountry');
		var CountryModel = require('models/CountryModel');
		var PageKeyword = require('views/keyword/PageKeyword');
		var FormKeyword = require('views/keyword/FormKeyword');
		var KeywordModel = require('models/KeywordModel');
		var PageGender = require('views/gender/PageGender');
		var FormGender = require('views/gender/FormGender');
		var GenderModel = require('models/GenderModel');
		var PageMovieCrew = require('views/movieCrew/PageMovieCrew');
		var FormMovieCrew = require('views/movieCrew/FormMovieCrew');
		var MovieCrewModel = require('models/MovieCrewModel');
		var PageCompany = require('views/company/PageCompany');
		var FormCompany = require('views/company/FormCompany');
		var CompanyModel = require('models/CompanyModel');
		var PagePerson = require('views/person/PagePerson');
		var FormPerson = require('views/person/FormPerson');
		var PersonModel = require('models/PersonModel');
		var PageUser = require('views/user/PageUser');
		var FormUser = require('views/user/FormUser');
		var UserModel = require('models/UserModel');
		var PageRole = require('views/role/PageRole');
		var FormRole = require('views/role/FormRole');
		var RoleModel = require('models/RoleModel');
		var PagePermission = require('views/permission/PagePermission');
		var FormPermission = require('views/permission/FormPermission');
		var PermissionModel = require('models/PermissionModel');
		var PageGroup = require('views/group/PageGroup');
		var FormGroup = require('views/group/FormGroup');
		var GroupModel = require('models/GroupModel');
		var PageItem = require('views/item/PageItem');
		var FormItem = require('views/item/FormItem');
		var ItemModel = require('models/ItemModel');
	
			// hashs de Department
			'app/departments' : 'departments',
			'app/newDepartment' : 'newDepartment',
			'app/editDepartment/:id' : 'editDepartment',
			// hashs de Movie
			'app/movies' : 'movies',
			'app/newMovie' : 'newMovie',
			'app/editMovie/:id' : 'editMovie',
			// hashs de Genre
			'app/genres' : 'genres',
			'app/newGenre' : 'newGenre',
			'app/editGenre/:id' : 'editGenre',
			// hashs de MovieCast
			'app/movieCasts' : 'movieCasts',
			'app/newMovieCast' : 'newMovieCast',
			'app/editMovieCast/:id' : 'editMovieCast',
			// hashs de Language
			'app/languages' : 'languages',
			'app/newLanguage' : 'newLanguage',
			'app/editLanguage/:id' : 'editLanguage',
			// hashs de Country
			'app/countrys' : 'countrys',
			'app/newCountry' : 'newCountry',
			'app/editCountry/:id' : 'editCountry',
			// hashs de Keyword
			'app/keywords' : 'keywords',
			'app/newKeyword' : 'newKeyword',
			'app/editKeyword/:id' : 'editKeyword',
			// hashs de Gender
			'app/genders' : 'genders',
			'app/newGender' : 'newGender',
			'app/editGender/:id' : 'editGender',
			// hashs de MovieCrew
			'app/movieCrews' : 'movieCrews',
			'app/newMovieCrew' : 'newMovieCrew',
			'app/editMovieCrew/:id' : 'editMovieCrew',
			// hashs de Company
			'app/companys' : 'companys',
			'app/newCompany' : 'newCompany',
			'app/editCompany/:id' : 'editCompany',
			// hashs de Person
			'app/persons' : 'persons',
			'app/newPerson' : 'newPerson',
			'app/editPerson/:id' : 'editPerson',
			// hashs de User
			'app/users' : 'users',
			'app/newUser' : 'newUser',
			'app/editUser/:id' : 'editUser',
			// hashs de Role
			'app/roles' : 'roles',
			'app/newRole' : 'newRole',
			'app/editRole/:id' : 'editRole',
			// hashs de Permission
			'app/permissions' : 'permissions',
			'app/newPermission' : 'newPermission',
			'app/editPermission/:id' : 'editPermission',
			// hashs de Group
			'app/groups' : 'groups',
			'app/newGroup' : 'newGroup',
			'app/editGroup/:id' : 'editGroup',
			// hashs de Item
			'app/items' : 'items',
			'app/newItem' : 'newItem',
			'app/editItem/:id' : 'editItem',
			
			//configuração das rotas de Department
			appRouter.on('route:departments', function() {
				util.markActiveItem('departments');
				appRouter.pageDepartment = new PageDepartment();
				App.mainRegion.show(appRouter.pageDepartment);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Department',
					itemSubFolderName : 'Grid',
					url : 'app/departments'
				});
			});
	
			appRouter.on('route:newDepartment', function() {
				util.markActiveItem('departments');
				var formDepartment = new FormDepartment({
					model : new DepartmentModel(),
				});
				App.mainRegion.show(formDepartment);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Department',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/departments'
				});
			});
			
			appRouter.on('route:editDepartment', function(idDepartment) {
				util.markActiveItem('departments');
				var formDepartment = null;
				if (appRouter.pageDepartment) {
					formDepartment = new FormDepartment({
						model : appRouter.pageDepartment.departments.get(idDepartment),
					});
					App.mainRegion.show(formDepartment);
				} else {
					var model = new DepartmentModel({
						id : idDepartment,
					})
					model.fetch({
						success : function(model) {
							formDepartment = new FormDepartment({
								model : model,
							});
							App.mainRegion.show(formDepartment);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Departmentos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/departments'
					});
				}
			});
			//configuração das rotas de Movie
			appRouter.on('route:movies', function() {
				util.markActiveItem('movies');
				appRouter.pageMovie = new PageMovie();
				App.mainRegion.show(appRouter.pageMovie);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Movie',
					itemSubFolderName : 'Grid',
					url : 'app/movies'
				});
			});
	
			appRouter.on('route:newMovie', function() {
				util.markActiveItem('movies');
				var formMovie = new FormMovie({
					model : new MovieModel(),
				});
				App.mainRegion.show(formMovie);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Movie',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/movies'
				});
			});
			
			appRouter.on('route:editMovie', function(idMovie) {
				util.markActiveItem('movies');
				var formMovie = null;
				if (appRouter.pageMovie) {
					formMovie = new FormMovie({
						model : appRouter.pageMovie.movies.get(idMovie),
					});
					App.mainRegion.show(formMovie);
				} else {
					var model = new MovieModel({
						id : idMovie,
					})
					model.fetch({
						success : function(model) {
							formMovie = new FormMovie({
								model : model,
							});
							App.mainRegion.show(formMovie);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Movieos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/movies'
					});
				}
			});
			//configuração das rotas de Genre
			appRouter.on('route:genres', function() {
				util.markActiveItem('genres');
				appRouter.pageGenre = new PageGenre();
				App.mainRegion.show(appRouter.pageGenre);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Genre',
					itemSubFolderName : 'Grid',
					url : 'app/genres'
				});
			});
	
			appRouter.on('route:newGenre', function() {
				util.markActiveItem('genres');
				var formGenre = new FormGenre({
					model : new GenreModel(),
				});
				App.mainRegion.show(formGenre);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Genre',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/genres'
				});
			});
			
			appRouter.on('route:editGenre', function(idGenre) {
				util.markActiveItem('genres');
				var formGenre = null;
				if (appRouter.pageGenre) {
					formGenre = new FormGenre({
						model : appRouter.pageGenre.genres.get(idGenre),
					});
					App.mainRegion.show(formGenre);
				} else {
					var model = new GenreModel({
						id : idGenre,
					})
					model.fetch({
						success : function(model) {
							formGenre = new FormGenre({
								model : model,
							});
							App.mainRegion.show(formGenre);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Genreos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/genres'
					});
				}
			});
			//configuração das rotas de MovieCast
			appRouter.on('route:movieCasts', function() {
				util.markActiveItem('movieCasts');
				appRouter.pageMovieCast = new PageMovieCast();
				App.mainRegion.show(appRouter.pageMovieCast);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'MovieCast',
					itemSubFolderName : 'Grid',
					url : 'app/movieCasts'
				});
			});
	
			appRouter.on('route:newMovieCast', function() {
				util.markActiveItem('movieCasts');
				var formMovieCast = new FormMovieCast({
					model : new MovieCastModel(),
				});
				App.mainRegion.show(formMovieCast);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'MovieCast',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/movieCasts'
				});
			});
			
			appRouter.on('route:editMovieCast', function(idMovieCast) {
				util.markActiveItem('movieCasts');
				var formMovieCast = null;
				if (appRouter.pageMovieCast) {
					formMovieCast = new FormMovieCast({
						model : appRouter.pageMovieCast.movieCasts.get(idMovieCast),
					});
					App.mainRegion.show(formMovieCast);
				} else {
					var model = new MovieCastModel({
						id : idMovieCast,
					})
					model.fetch({
						success : function(model) {
							formMovieCast = new FormMovieCast({
								model : model,
							});
							App.mainRegion.show(formMovieCast);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'MovieCastos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/movieCasts'
					});
				}
			});
			//configuração das rotas de Language
			appRouter.on('route:languages', function() {
				util.markActiveItem('languages');
				appRouter.pageLanguage = new PageLanguage();
				App.mainRegion.show(appRouter.pageLanguage);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Language',
					itemSubFolderName : 'Grid',
					url : 'app/languages'
				});
			});
	
			appRouter.on('route:newLanguage', function() {
				util.markActiveItem('languages');
				var formLanguage = new FormLanguage({
					model : new LanguageModel(),
				});
				App.mainRegion.show(formLanguage);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Language',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/languages'
				});
			});
			
			appRouter.on('route:editLanguage', function(idLanguage) {
				util.markActiveItem('languages');
				var formLanguage = null;
				if (appRouter.pageLanguage) {
					formLanguage = new FormLanguage({
						model : appRouter.pageLanguage.languages.get(idLanguage),
					});
					App.mainRegion.show(formLanguage);
				} else {
					var model = new LanguageModel({
						id : idLanguage,
					})
					model.fetch({
						success : function(model) {
							formLanguage = new FormLanguage({
								model : model,
							});
							App.mainRegion.show(formLanguage);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Languageos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/languages'
					});
				}
			});
			//configuração das rotas de Country
			appRouter.on('route:countrys', function() {
				util.markActiveItem('countrys');
				appRouter.pageCountry = new PageCountry();
				App.mainRegion.show(appRouter.pageCountry);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Country',
					itemSubFolderName : 'Grid',
					url : 'app/countrys'
				});
			});
	
			appRouter.on('route:newCountry', function() {
				util.markActiveItem('countrys');
				var formCountry = new FormCountry({
					model : new CountryModel(),
				});
				App.mainRegion.show(formCountry);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Country',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/countrys'
				});
			});
			
			appRouter.on('route:editCountry', function(idCountry) {
				util.markActiveItem('countrys');
				var formCountry = null;
				if (appRouter.pageCountry) {
					formCountry = new FormCountry({
						model : appRouter.pageCountry.countrys.get(idCountry),
					});
					App.mainRegion.show(formCountry);
				} else {
					var model = new CountryModel({
						id : idCountry,
					})
					model.fetch({
						success : function(model) {
							formCountry = new FormCountry({
								model : model,
							});
							App.mainRegion.show(formCountry);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Countryos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/countrys'
					});
				}
			});
			//configuração das rotas de Keyword
			appRouter.on('route:keywords', function() {
				util.markActiveItem('keywords');
				appRouter.pageKeyword = new PageKeyword();
				App.mainRegion.show(appRouter.pageKeyword);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Keyword',
					itemSubFolderName : 'Grid',
					url : 'app/keywords'
				});
			});
	
			appRouter.on('route:newKeyword', function() {
				util.markActiveItem('keywords');
				var formKeyword = new FormKeyword({
					model : new KeywordModel(),
				});
				App.mainRegion.show(formKeyword);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Keyword',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/keywords'
				});
			});
			
			appRouter.on('route:editKeyword', function(idKeyword) {
				util.markActiveItem('keywords');
				var formKeyword = null;
				if (appRouter.pageKeyword) {
					formKeyword = new FormKeyword({
						model : appRouter.pageKeyword.keywords.get(idKeyword),
					});
					App.mainRegion.show(formKeyword);
				} else {
					var model = new KeywordModel({
						id : idKeyword,
					})
					model.fetch({
						success : function(model) {
							formKeyword = new FormKeyword({
								model : model,
							});
							App.mainRegion.show(formKeyword);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Keywordos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/keywords'
					});
				}
			});
			//configuração das rotas de Gender
			appRouter.on('route:genders', function() {
				util.markActiveItem('genders');
				appRouter.pageGender = new PageGender();
				App.mainRegion.show(appRouter.pageGender);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Gender',
					itemSubFolderName : 'Grid',
					url : 'app/genders'
				});
			});
	
			appRouter.on('route:newGender', function() {
				util.markActiveItem('genders');
				var formGender = new FormGender({
					model : new GenderModel(),
				});
				App.mainRegion.show(formGender);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Gender',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/genders'
				});
			});
			
			appRouter.on('route:editGender', function(idGender) {
				util.markActiveItem('genders');
				var formGender = null;
				if (appRouter.pageGender) {
					formGender = new FormGender({
						model : appRouter.pageGender.genders.get(idGender),
					});
					App.mainRegion.show(formGender);
				} else {
					var model = new GenderModel({
						id : idGender,
					})
					model.fetch({
						success : function(model) {
							formGender = new FormGender({
								model : model,
							});
							App.mainRegion.show(formGender);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Genderos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/genders'
					});
				}
			});
			//configuração das rotas de MovieCrew
			appRouter.on('route:movieCrews', function() {
				util.markActiveItem('movieCrews');
				appRouter.pageMovieCrew = new PageMovieCrew();
				App.mainRegion.show(appRouter.pageMovieCrew);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'MovieCrew',
					itemSubFolderName : 'Grid',
					url : 'app/movieCrews'
				});
			});
	
			appRouter.on('route:newMovieCrew', function() {
				util.markActiveItem('movieCrews');
				var formMovieCrew = new FormMovieCrew({
					model : new MovieCrewModel(),
				});
				App.mainRegion.show(formMovieCrew);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'MovieCrew',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/movieCrews'
				});
			});
			
			appRouter.on('route:editMovieCrew', function(idMovieCrew) {
				util.markActiveItem('movieCrews');
				var formMovieCrew = null;
				if (appRouter.pageMovieCrew) {
					formMovieCrew = new FormMovieCrew({
						model : appRouter.pageMovieCrew.movieCrews.get(idMovieCrew),
					});
					App.mainRegion.show(formMovieCrew);
				} else {
					var model = new MovieCrewModel({
						id : idMovieCrew,
					})
					model.fetch({
						success : function(model) {
							formMovieCrew = new FormMovieCrew({
								model : model,
							});
							App.mainRegion.show(formMovieCrew);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'MovieCrewos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/movieCrews'
					});
				}
			});
			//configuração das rotas de Company
			appRouter.on('route:companys', function() {
				util.markActiveItem('companys');
				appRouter.pageCompany = new PageCompany();
				App.mainRegion.show(appRouter.pageCompany);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Company',
					itemSubFolderName : 'Grid',
					url : 'app/companys'
				});
			});
	
			appRouter.on('route:newCompany', function() {
				util.markActiveItem('companys');
				var formCompany = new FormCompany({
					model : new CompanyModel(),
				});
				App.mainRegion.show(formCompany);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Company',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/companys'
				});
			});
			
			appRouter.on('route:editCompany', function(idCompany) {
				util.markActiveItem('companys');
				var formCompany = null;
				if (appRouter.pageCompany) {
					formCompany = new FormCompany({
						model : appRouter.pageCompany.companys.get(idCompany),
					});
					App.mainRegion.show(formCompany);
				} else {
					var model = new CompanyModel({
						id : idCompany,
					})
					model.fetch({
						success : function(model) {
							formCompany = new FormCompany({
								model : model,
							});
							App.mainRegion.show(formCompany);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Companyos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/companys'
					});
				}
			});
			//configuração das rotas de Person
			appRouter.on('route:persons', function() {
				util.markActiveItem('persons');
				appRouter.pagePerson = new PagePerson();
				App.mainRegion.show(appRouter.pagePerson);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Person',
					itemSubFolderName : 'Grid',
					url : 'app/persons'
				});
			});
	
			appRouter.on('route:newPerson', function() {
				util.markActiveItem('persons');
				var formPerson = new FormPerson({
					model : new PersonModel(),
				});
				App.mainRegion.show(formPerson);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Person',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/persons'
				});
			});
			
			appRouter.on('route:editPerson', function(idPerson) {
				util.markActiveItem('persons');
				var formPerson = null;
				if (appRouter.pagePerson) {
					formPerson = new FormPerson({
						model : appRouter.pagePerson.persons.get(idPerson),
					});
					App.mainRegion.show(formPerson);
				} else {
					var model = new PersonModel({
						id : idPerson,
					})
					model.fetch({
						success : function(model) {
							formPerson = new FormPerson({
								model : model,
							});
							App.mainRegion.show(formPerson);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Personos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/persons'
					});
				}
			});
			//configuração das rotas de User
			appRouter.on('route:users', function() {
				util.markActiveItem('users');
				appRouter.pageUser = new PageUser();
				App.mainRegion.show(appRouter.pageUser);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'User',
					itemSubFolderName : 'Grid',
					url : 'app/users'
				});
			});
	
			appRouter.on('route:newUser', function() {
				util.markActiveItem('users');
				var formUser = new FormUser({
					model : new UserModel(),
				});
				App.mainRegion.show(formUser);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'User',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/users'
				});
			});
			
			appRouter.on('route:editUser', function(idUser) {
				util.markActiveItem('users');
				var formUser = null;
				if (appRouter.pageUser) {
					formUser = new FormUser({
						model : appRouter.pageUser.users.get(idUser),
					});
					App.mainRegion.show(formUser);
				} else {
					var model = new UserModel({
						id : idUser,
					})
					model.fetch({
						success : function(model) {
							formUser = new FormUser({
								model : model,
							});
							App.mainRegion.show(formUser);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Useros',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/users'
					});
				}
			});
			//configuração das rotas de Role
			appRouter.on('route:roles', function() {
				util.markActiveItem('roles');
				appRouter.pageRole = new PageRole();
				App.mainRegion.show(appRouter.pageRole);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Role',
					itemSubFolderName : 'Grid',
					url : 'app/roles'
				});
			});
	
			appRouter.on('route:newRole', function() {
				util.markActiveItem('roles');
				var formRole = new FormRole({
					model : new RoleModel(),
				});
				App.mainRegion.show(formRole);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Role',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/roles'
				});
			});
			
			appRouter.on('route:editRole', function(idRole) {
				util.markActiveItem('roles');
				var formRole = null;
				if (appRouter.pageRole) {
					formRole = new FormRole({
						model : appRouter.pageRole.roles.get(idRole),
					});
					App.mainRegion.show(formRole);
				} else {
					var model = new RoleModel({
						id : idRole,
					})
					model.fetch({
						success : function(model) {
							formRole = new FormRole({
								model : model,
							});
							App.mainRegion.show(formRole);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Roleos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/roles'
					});
				}
			});
			//configuração das rotas de Permission
			appRouter.on('route:permissions', function() {
				util.markActiveItem('permissions');
				appRouter.pagePermission = new PagePermission();
				App.mainRegion.show(appRouter.pagePermission);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Permission',
					itemSubFolderName : 'Grid',
					url : 'app/permissions'
				});
			});
	
			appRouter.on('route:newPermission', function() {
				util.markActiveItem('permissions');
				var formPermission = new FormPermission({
					model : new PermissionModel(),
				});
				App.mainRegion.show(formPermission);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Permission',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/permissions'
				});
			});
			
			appRouter.on('route:editPermission', function(idPermission) {
				util.markActiveItem('permissions');
				var formPermission = null;
				if (appRouter.pagePermission) {
					formPermission = new FormPermission({
						model : appRouter.pagePermission.permissions.get(idPermission),
					});
					App.mainRegion.show(formPermission);
				} else {
					var model = new PermissionModel({
						id : idPermission,
					})
					model.fetch({
						success : function(model) {
							formPermission = new FormPermission({
								model : model,
							});
							App.mainRegion.show(formPermission);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Permissionos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/permissions'
					});
				}
			});
			//configuração das rotas de Group
			appRouter.on('route:groups', function() {
				util.markActiveItem('groups');
				appRouter.pageGroup = new PageGroup();
				App.mainRegion.show(appRouter.pageGroup);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Group',
					itemSubFolderName : 'Grid',
					url : 'app/groups'
				});
			});
	
			appRouter.on('route:newGroup', function() {
				util.markActiveItem('groups');
				var formGroup = new FormGroup({
					model : new GroupModel(),
				});
				App.mainRegion.show(formGroup);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Group',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/groups'
				});
			});
			
			appRouter.on('route:editGroup', function(idGroup) {
				util.markActiveItem('groups');
				var formGroup = null;
				if (appRouter.pageGroup) {
					formGroup = new FormGroup({
						model : appRouter.pageGroup.groups.get(idGroup),
					});
					App.mainRegion.show(formGroup);
				} else {
					var model = new GroupModel({
						id : idGroup,
					})
					model.fetch({
						success : function(model) {
							formGroup = new FormGroup({
								model : model,
							});
							App.mainRegion.show(formGroup);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Groupos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/groups'
					});
				}
			});
			//configuração das rotas de Item
			appRouter.on('route:items', function() {
				util.markActiveItem('items');
				appRouter.pageItem = new PageItem();
				App.mainRegion.show(appRouter.pageItem);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Item',
					itemSubFolderName : 'Grid',
					url : 'app/items'
				});
			});
	
			appRouter.on('route:newItem', function() {
				util.markActiveItem('items');
				var formItem = new FormItem({
					model : new ItemModel(),
				});
				App.mainRegion.show(formItem);
				util.breadcrumb({
					iconClass : 'fa-desktop',
					itemLabel : 'Item',
					itemSubFolderName : 'Formulário de cadastro',
					url : 'app/items'
				});
			});
			
			appRouter.on('route:editItem', function(idItem) {
				util.markActiveItem('items');
				var formItem = null;
				if (appRouter.pageItem) {
					formItem = new FormItem({
						model : appRouter.pageItem.items.get(idItem),
					});
					App.mainRegion.show(formItem);
				} else {
					var model = new ItemModel({
						id : idItem,
					})
					model.fetch({
						success : function(model) {
							formItem = new FormItem({
								model : model,
							});
							App.mainRegion.show(formItem);
						},
						error : function(x, y, z) {
							console.error(x, y, z);
						}
					})
					util.breadcrumb({
						iconClass : 'fa-calendar',
						itemLabel : 'Itemos',
						itemSubFolderName : 'Formulário de atualização',
						url : 'app/items'
					});
				}
			});
			

	############################################################################
						Menu de cadastros
	############################################################################
			<li id="departments" class="">
				<a href="#app/departments">
					<i class="menu-icon fa fa-caret-right"></i>
					Department
				</a>
				<b class="arrow"></b>
			</li>
			<li id="movies" class="">
				<a href="#app/movies">
					<i class="menu-icon fa fa-caret-right"></i>
					Movie
				</a>
				<b class="arrow"></b>
			</li>
			<li id="genres" class="">
				<a href="#app/genres">
					<i class="menu-icon fa fa-caret-right"></i>
					Genre
				</a>
				<b class="arrow"></b>
			</li>
			<li id="movieCasts" class="">
				<a href="#app/movieCasts">
					<i class="menu-icon fa fa-caret-right"></i>
					MovieCast
				</a>
				<b class="arrow"></b>
			</li>
			<li id="languages" class="">
				<a href="#app/languages">
					<i class="menu-icon fa fa-caret-right"></i>
					Language
				</a>
				<b class="arrow"></b>
			</li>
			<li id="countrys" class="">
				<a href="#app/countrys">
					<i class="menu-icon fa fa-caret-right"></i>
					Country
				</a>
				<b class="arrow"></b>
			</li>
			<li id="keywords" class="">
				<a href="#app/keywords">
					<i class="menu-icon fa fa-caret-right"></i>
					Keyword
				</a>
				<b class="arrow"></b>
			</li>
			<li id="genders" class="">
				<a href="#app/genders">
					<i class="menu-icon fa fa-caret-right"></i>
					Gender
				</a>
				<b class="arrow"></b>
			</li>
			<li id="movieCrews" class="">
				<a href="#app/movieCrews">
					<i class="menu-icon fa fa-caret-right"></i>
					MovieCrew
				</a>
				<b class="arrow"></b>
			</li>
			<li id="companys" class="">
				<a href="#app/companys">
					<i class="menu-icon fa fa-caret-right"></i>
					Company
				</a>
				<b class="arrow"></b>
			</li>
			<li id="persons" class="">
				<a href="#app/persons">
					<i class="menu-icon fa fa-caret-right"></i>
					Person
				</a>
				<b class="arrow"></b>
			</li>
			<li id="users" class="">
				<a href="#app/users">
					<i class="menu-icon fa fa-caret-right"></i>
					Usuário
				</a>
				<b class="arrow"></b>
			</li>
			<li id="roles" class="">
				<a href="#app/roles">
					<i class="menu-icon fa fa-caret-right"></i>
					Papel
				</a>
				<b class="arrow"></b>
			</li>
			<li id="permissions" class="">
				<a href="#app/permissions">
					<i class="menu-icon fa fa-caret-right"></i>
					Permissão
				</a>
				<b class="arrow"></b>
			</li>
			<li id="groups" class="">
				<a href="#app/groups">
					<i class="menu-icon fa fa-caret-right"></i>
					Grupo de Permissões
				</a>
				<b class="arrow"></b>
			</li>
			<li id="items" class="">
				<a href="#app/items">
					<i class="menu-icon fa fa-caret-right"></i>
					Item
				</a>
				<b class="arrow"></b>
			</li>
		
	############################################################################
						Parser json-> objeto objeto -> json
	############################################################################
	//converte de entidade para json
	public static JsonDepartment toJson(Department department) {
		JsonDepartment jsonDepartment = new JsonDepartment();
		
		jsonDepartment.setId(department.getId());
	    jsonDepartment.setDepartmentName(department.getDepartmentName());
		return jsonDepartment;
	}

	public static Department toEntity(JsonDepartment jsonDepartment) {
		Department department = new Department();
		
		department.setId(jsonDepartment.getId());
		department.setDepartmentName(jsonDepartment.getDepartmentName());
		return department;
	}		
	
	public static List<JsonDepartment> toListJsonDepartments(List<Department> all) {
		List<JsonDepartment> jsonDepartments = new ArrayList<JsonDepartment>();
		for (Department department : all) {
			jsonDepartments.add(toJson(department));
		}
		return jsonDepartments;
	}
	//converte de entidade para json
	public static JsonMovie toJson(Movie movie) {
		JsonMovie jsonMovie = new JsonMovie();
		
		jsonMovie.setId(movie.getId());
	    jsonMovie.setTitle(movie.getTitle());
	    jsonMovie.setBudget(movie.getBudget());
	    jsonMovie.setHomepage(movie.getHomepage());
	    jsonMovie.setOverview(movie.getOverview());
	    jsonMovie.setPopularity(movie.getPopularity());
		jsonMovie.setReleaseDate(DateUtil.localDateAsString(movie.getReleaseDate()));
	    jsonMovie.setRevenue(movie.getRevenue());
	    jsonMovie.setRuntime(movie.getRuntime());
	    jsonMovie.setStatus(movie.getStatus());
	    jsonMovie.setTagline(movie.getTagline());
	    jsonMovie.setVoteAverage(movie.getVoteAverage());
	    jsonMovie.setVoteCount(movie.getVoteCount());
		return jsonMovie;
	}

	public static Movie toEntity(JsonMovie jsonMovie) {
		Movie movie = new Movie();
		
		movie.setId(jsonMovie.getId());
		movie.setTitle(jsonMovie.getTitle());
		movie.setBudget(jsonMovie.getBudget());
		movie.setHomepage(jsonMovie.getHomepage());
		movie.setOverview(jsonMovie.getOverview());
		movie.setPopularity(jsonMovie.getPopularity());
	    movie.setReleaseDate(DateUtil.stringAsLocalDate(jsonMovie.getReleaseDate()));
		movie.setRevenue(jsonMovie.getRevenue());
		movie.setRuntime(jsonMovie.getRuntime());
		movie.setStatus(jsonMovie.getStatus());
		movie.setTagline(jsonMovie.getTagline());
		movie.setVoteAverage(jsonMovie.getVoteAverage());
		movie.setVoteCount(jsonMovie.getVoteCount());
		return movie;
	}		
	
	public static List<JsonMovie> toListJsonMovies(List<Movie> all) {
		List<JsonMovie> jsonMovies = new ArrayList<JsonMovie>();
		for (Movie movie : all) {
			jsonMovies.add(toJson(movie));
		}
		return jsonMovies;
	}
	//converte de entidade para json
	public static JsonGenre toJson(Genre genre) {
		JsonGenre jsonGenre = new JsonGenre();
		
		jsonGenre.setId(genre.getId());
	    jsonGenre.setGenreName(genre.getGenreName());
		return jsonGenre;
	}

	public static Genre toEntity(JsonGenre jsonGenre) {
		Genre genre = new Genre();
		
		genre.setId(jsonGenre.getId());
		genre.setGenreName(jsonGenre.getGenreName());
		return genre;
	}		
	
	public static List<JsonGenre> toListJsonGenres(List<Genre> all) {
		List<JsonGenre> jsonGenres = new ArrayList<JsonGenre>();
		for (Genre genre : all) {
			jsonGenres.add(toJson(genre));
		}
		return jsonGenres;
	}
	//converte de entidade para json
	public static JsonMovieCast toJson(MovieCast movieCast) {
		JsonMovieCast jsonMovieCast = new JsonMovieCast();
		
		jsonMovieCast.setId(movieCast.getId());
	    jsonMovieCast.setOrder(movieCast.getOrder());
	    jsonMovieCast.setCharacterName(movieCast.getCharacterName());
		jsonMovieCast.setMovie(toJson(movieCast.getMovie()));		
		jsonMovieCast.setGender(toJson(movieCast.getGender()));		
		jsonMovieCast.setPerson(toJson(movieCast.getPerson()));		
		return jsonMovieCast;
	}

	public static MovieCast toEntity(JsonMovieCast jsonMovieCast) {
		MovieCast movieCast = new MovieCast();
		
		movieCast.setId(jsonMovieCast.getId());
		movieCast.setOrder(jsonMovieCast.getOrder());
		movieCast.setCharacterName(jsonMovieCast.getCharacterName());
		movieCast.setMovie(toEntity(jsonMovieCast.getMovie()));					
		movieCast.setGender(toEntity(jsonMovieCast.getGender()));					
		movieCast.setPerson(toEntity(jsonMovieCast.getPerson()));					
		return movieCast;
	}		
	
	public static List<JsonMovieCast> toListJsonMovieCasts(List<MovieCast> all) {
		List<JsonMovieCast> jsonMovieCasts = new ArrayList<JsonMovieCast>();
		for (MovieCast movieCast : all) {
			jsonMovieCasts.add(toJson(movieCast));
		}
		return jsonMovieCasts;
	}
	//converte de entidade para json
	public static JsonLanguage toJson(Language language) {
		JsonLanguage jsonLanguage = new JsonLanguage();
		
		jsonLanguage.setId(language.getId());
	    jsonLanguage.setCode(language.getCode());
	    jsonLanguage.setName(language.getName());
		return jsonLanguage;
	}

	public static Language toEntity(JsonLanguage jsonLanguage) {
		Language language = new Language();
		
		language.setId(jsonLanguage.getId());
		language.setCode(jsonLanguage.getCode());
		language.setName(jsonLanguage.getName());
		return language;
	}		
	
	public static List<JsonLanguage> toListJsonLanguages(List<Language> all) {
		List<JsonLanguage> jsonLanguages = new ArrayList<JsonLanguage>();
		for (Language language : all) {
			jsonLanguages.add(toJson(language));
		}
		return jsonLanguages;
	}
	//converte de entidade para json
	public static JsonCountry toJson(Country country) {
		JsonCountry jsonCountry = new JsonCountry();
		
		jsonCountry.setId(country.getId());
	    jsonCountry.setName(country.getName());
	    jsonCountry.setIsoCode(country.getIsoCode());
		return jsonCountry;
	}

	public static Country toEntity(JsonCountry jsonCountry) {
		Country country = new Country();
		
		country.setId(jsonCountry.getId());
		country.setName(jsonCountry.getName());
		country.setIsoCode(jsonCountry.getIsoCode());
		return country;
	}		
	
	public static List<JsonCountry> toListJsonCountrys(List<Country> all) {
		List<JsonCountry> jsonCountrys = new ArrayList<JsonCountry>();
		for (Country country : all) {
			jsonCountrys.add(toJson(country));
		}
		return jsonCountrys;
	}
	//converte de entidade para json
	public static JsonKeyword toJson(Keyword keyword) {
		JsonKeyword jsonKeyword = new JsonKeyword();
		
		jsonKeyword.setId(keyword.getId());
	    jsonKeyword.setName(keyword.getName());
		return jsonKeyword;
	}

	public static Keyword toEntity(JsonKeyword jsonKeyword) {
		Keyword keyword = new Keyword();
		
		keyword.setId(jsonKeyword.getId());
		keyword.setName(jsonKeyword.getName());
		return keyword;
	}		
	
	public static List<JsonKeyword> toListJsonKeywords(List<Keyword> all) {
		List<JsonKeyword> jsonKeywords = new ArrayList<JsonKeyword>();
		for (Keyword keyword : all) {
			jsonKeywords.add(toJson(keyword));
		}
		return jsonKeywords;
	}
	//converte de entidade para json
	public static JsonGender toJson(Gender gender) {
		JsonGender jsonGender = new JsonGender();
		
		jsonGender.setId(gender.getId());
	    jsonGender.setGender(gender.getGender());
		return jsonGender;
	}

	public static Gender toEntity(JsonGender jsonGender) {
		Gender gender = new Gender();
		
		gender.setId(jsonGender.getId());
		gender.setGender(jsonGender.getGender());
		return gender;
	}		
	
	public static List<JsonGender> toListJsonGenders(List<Gender> all) {
		List<JsonGender> jsonGenders = new ArrayList<JsonGender>();
		for (Gender gender : all) {
			jsonGenders.add(toJson(gender));
		}
		return jsonGenders;
	}
	//converte de entidade para json
	public static JsonMovieCrew toJson(MovieCrew movieCrew) {
		JsonMovieCrew jsonMovieCrew = new JsonMovieCrew();
		
		jsonMovieCrew.setId(movieCrew.getId());
	    jsonMovieCrew.setJob(movieCrew.getJob());
		jsonMovieCrew.setMovie(toJson(movieCrew.getMovie()));		
		jsonMovieCrew.setPerson(toJson(movieCrew.getPerson()));		
		jsonMovieCrew.setDepartment(toJson(movieCrew.getDepartment()));		
		return jsonMovieCrew;
	}

	public static MovieCrew toEntity(JsonMovieCrew jsonMovieCrew) {
		MovieCrew movieCrew = new MovieCrew();
		
		movieCrew.setId(jsonMovieCrew.getId());
		movieCrew.setJob(jsonMovieCrew.getJob());
		movieCrew.setMovie(toEntity(jsonMovieCrew.getMovie()));					
		movieCrew.setPerson(toEntity(jsonMovieCrew.getPerson()));					
		movieCrew.setDepartment(toEntity(jsonMovieCrew.getDepartment()));					
		return movieCrew;
	}		
	
	public static List<JsonMovieCrew> toListJsonMovieCrews(List<MovieCrew> all) {
		List<JsonMovieCrew> jsonMovieCrews = new ArrayList<JsonMovieCrew>();
		for (MovieCrew movieCrew : all) {
			jsonMovieCrews.add(toJson(movieCrew));
		}
		return jsonMovieCrews;
	}
	//converte de entidade para json
	public static JsonCompany toJson(Company company) {
		JsonCompany jsonCompany = new JsonCompany();
		
		jsonCompany.setId(company.getId());
	    jsonCompany.setName(company.getName());
		return jsonCompany;
	}

	public static Company toEntity(JsonCompany jsonCompany) {
		Company company = new Company();
		
		company.setId(jsonCompany.getId());
		company.setName(jsonCompany.getName());
		return company;
	}		
	
	public static List<JsonCompany> toListJsonCompanys(List<Company> all) {
		List<JsonCompany> jsonCompanys = new ArrayList<JsonCompany>();
		for (Company company : all) {
			jsonCompanys.add(toJson(company));
		}
		return jsonCompanys;
	}
	//converte de entidade para json
	public static JsonPerson toJson(Person person) {
		JsonPerson jsonPerson = new JsonPerson();
		
		jsonPerson.setId(person.getId());
	    jsonPerson.setName(person.getName());
		return jsonPerson;
	}

	public static Person toEntity(JsonPerson jsonPerson) {
		Person person = new Person();
		
		person.setId(jsonPerson.getId());
		person.setName(jsonPerson.getName());
		return person;
	}		
	
	public static List<JsonPerson> toListJsonPersons(List<Person> all) {
		List<JsonPerson> jsonPersons = new ArrayList<JsonPerson>();
		for (Person person : all) {
			jsonPersons.add(toJson(person));
		}
		return jsonPersons;
	}
	//converte de entidade para json
	public static JsonUser toJson(User user) {
		JsonUser jsonUser = new JsonUser();
		
		jsonUser.setId(user.getId());
	    jsonUser.setName(user.getName());
	    jsonUser.setUsername(user.getUsername());
	    jsonUser.setEmail(user.getEmail());
	    jsonUser.setPassword(user.getPassword());
	    jsonUser.setEnable(user.getEnable());
	    jsonUser.setImage(user.getImage());
		return jsonUser;
	}

	public static User toEntity(JsonUser jsonUser) {
		User user = new User();
		
		user.setId(jsonUser.getId());
		user.setName(jsonUser.getName());
		user.setUsername(jsonUser.getUsername());
		user.setEmail(jsonUser.getEmail());
		user.setPassword(jsonUser.getPassword());
		user.setEnable(jsonUser.getEnable());
		user.setImage(jsonUser.getImage());
		return user;
	}		
	
	public static List<JsonUser> toListJsonUsers(List<User> all) {
		List<JsonUser> jsonUsers = new ArrayList<JsonUser>();
		for (User user : all) {
			jsonUsers.add(toJson(user));
		}
		return jsonUsers;
	}
	//converte de entidade para json
	public static JsonRole toJson(Role role) {
		JsonRole jsonRole = new JsonRole();
		
		jsonRole.setId(role.getId());
	    jsonRole.setAuthority(role.getAuthority());
	    jsonRole.setDescription(role.getDescription());
		return jsonRole;
	}

	public static Role toEntity(JsonRole jsonRole) {
		Role role = new Role();
		
		role.setId(jsonRole.getId());
		role.setAuthority(jsonRole.getAuthority());
		role.setDescription(jsonRole.getDescription());
		return role;
	}		
	
	public static List<JsonRole> toListJsonRoles(List<Role> all) {
		List<JsonRole> jsonRoles = new ArrayList<JsonRole>();
		for (Role role : all) {
			jsonRoles.add(toJson(role));
		}
		return jsonRoles;
	}
	//converte de entidade para json
	public static JsonPermission toJson(Permission permission) {
		JsonPermission jsonPermission = new JsonPermission();
		
		jsonPermission.setId(permission.getId());
	    jsonPermission.setName(permission.getName());
	    jsonPermission.setDescription(permission.getDescription());
	    jsonPermission.setOperation(permission.getOperation());
	    jsonPermission.setTagReminder(permission.getTagReminder());
		jsonPermission.setItem(toJson(permission.getItem()));		
		return jsonPermission;
	}

	public static Permission toEntity(JsonPermission jsonPermission) {
		Permission permission = new Permission();
		
		permission.setId(jsonPermission.getId());
		permission.setName(jsonPermission.getName());
		permission.setDescription(jsonPermission.getDescription());
		permission.setOperation(jsonPermission.getOperation());
		permission.setTagReminder(jsonPermission.getTagReminder());
		permission.setItem(toEntity(jsonPermission.getItem()));					
		return permission;
	}		
	
	public static List<JsonPermission> toListJsonPermissions(List<Permission> all) {
		List<JsonPermission> jsonPermissions = new ArrayList<JsonPermission>();
		for (Permission permission : all) {
			jsonPermissions.add(toJson(permission));
		}
		return jsonPermissions;
	}
	//converte de entidade para json
	public static JsonGroup toJson(Group group) {
		JsonGroup jsonGroup = new JsonGroup();
		
		jsonGroup.setId(group.getId());
	    jsonGroup.setName(group.getName());
	    jsonGroup.setDescription(group.getDescription());
		return jsonGroup;
	}

	public static Group toEntity(JsonGroup jsonGroup) {
		Group group = new Group();
		
		group.setId(jsonGroup.getId());
		group.setName(jsonGroup.getName());
		group.setDescription(jsonGroup.getDescription());
		return group;
	}		
	
	public static List<JsonGroup> toListJsonGroups(List<Group> all) {
		List<JsonGroup> jsonGroups = new ArrayList<JsonGroup>();
		for (Group group : all) {
			jsonGroups.add(toJson(group));
		}
		return jsonGroups;
	}
	//converte de entidade para json
	public static JsonItem toJson(Item item) {
		JsonItem jsonItem = new JsonItem();
		
		jsonItem.setId(item.getId());
	    jsonItem.setName(item.getName());
	    jsonItem.setItemType(item.getItemType());
	    jsonItem.setIdentifier(item.getIdentifier());
	    jsonItem.setDescription(item.getDescription());
		return jsonItem;
	}

	public static Item toEntity(JsonItem jsonItem) {
		Item item = new Item();
		
		item.setId(jsonItem.getId());
		item.setName(jsonItem.getName());
		item.setItemType(jsonItem.getItemType());
		item.setIdentifier(jsonItem.getIdentifier());
		item.setDescription(jsonItem.getDescription());
		return item;
	}		
	
	public static List<JsonItem> toListJsonItems(List<Item> all) {
		List<JsonItem> jsonItems = new ArrayList<JsonItem>();
		for (Item item : all) {
			jsonItems.add(toJson(item));
		}
		return jsonItems;
	}

	############################################################################
						Seed permissions
	############################################################################

-- registros de autorização para Department	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Department', 			'item-list-Department',	'COMPONENT', 'Menu Departments'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao menu de Department', 'Usuário Poderá ver e acessar o item de menu de Department ', 'LEITURA', 'CRUD Department , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Department', 	'save-Department', 		'COMPONENT', 'Botão Salva Department'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Department', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Department ', 'LEITURA', 'CRUD Department , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Department', 								'new-Department', 		'COMPONENT', 'Botão Novo Department'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao botão de novo no formulario de Department', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Department ', 'LEITURA', 'CRUD Department , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Department no grid de Department na Listagem', 			'edit-Department', 		'COMPONENT', 'Botão Editar Department no Grid de Department');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao botão de edição no grid de Department', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Department ', 'LEITURA', 'CRUD Department , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Department no grid de Department na Listagem', 			'remove-Department', 	'COMPONENT', 'Botão deletar Department no Grid de Department');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao botão de delete no grid de Department', 'Usuário Poderá ver e acessar ao botão de delete no grid de Department ', 'LEITURA', 'CRUD Department , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Department', 										'app/departments', 		'SCREEN', 'Pesquisa de  Departments');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso a tela de listagem de  Department', 'Usuário Poderá ver e acessar a tela de listagem de  Department ', 'LEITURA', 'CRUD Department , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Department', 										'app/newDepartment', 	'SCREEN', 'Cadastro  de Departments');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso a tela de cadastro de  Department', 'Usuário Poderá ver e acessar a tela de cadastro de  Department ', 'LEITURA', 'CRUD Department , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Department', 										'app/editDepartment', 	'SCREEN', 'Edição de  Departments');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso a tela de edição de  Department', 'Usuário Poderá ver e acessar a tela de edição de  Department ', 'LEITURA', 'CRUD Department , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Departments', 										'crud/departments', 		'SERVICE', 			'Servico de Departments');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao serviço de listagem de  Department', 'Usuário Poderá acessar ao serviço de listagem de  Department ', 'LEITURA', 'CRUD Department , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao serviço para salvar um novo Department', 'Usuário Poderá acessar ao serviço para salvar um novo Department ', 'ESCRITA', 'CRUD Department , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Departments', 									'crud/departments/all', 		'SERVICE', 			'Servico de TODOS os Departments');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao serviço para listar todos  os Department', 'Usuário Poderá acessar ao serviço para salvar um novo Department ', 'LEITURA', 'CRUD Department , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Departments por filtro', 							'crud/departments/filter', 		'SERVICE', 			'Servico de Departments sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao serviço para listagem por filtro de Department', 'Usuário Poderá acessar ao serviço para listagem por filtro de Department ', 'LEITURA', 'CRUD Department , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Department específico', 							'crud/departments/[0-9]', 		'SERVICE', 			'Servico para acesso a Department especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao serviço para listagem de um unico Department', 'Usuário Poderá acessar ao serviço para listagem de um unico Department ', 'LEITURA', 'CRUD Department , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao serviço para atualizacao de um unico Department', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Department ', 'ATUALIZACAO', 'CRUD Department , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Department. Permissão de acesso ao serviço para deleção/remoção de um unico Department', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Department ', 'DELECAO', 'CRUD Department , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Movie	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Movie', 			'item-list-Movie',	'COMPONENT', 'Menu Movies'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao menu de Movie', 'Usuário Poderá ver e acessar o item de menu de Movie ', 'LEITURA', 'CRUD Movie , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Movie', 	'save-Movie', 		'COMPONENT', 'Botão Salva Movie'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Movie', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Movie ', 'LEITURA', 'CRUD Movie , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Movie', 								'new-Movie', 		'COMPONENT', 'Botão Novo Movie'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao botão de novo no formulario de Movie', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Movie ', 'LEITURA', 'CRUD Movie , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Movie no grid de Movie na Listagem', 			'edit-Movie', 		'COMPONENT', 'Botão Editar Movie no Grid de Movie');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao botão de edição no grid de Movie', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Movie ', 'LEITURA', 'CRUD Movie , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Movie no grid de Movie na Listagem', 			'remove-Movie', 	'COMPONENT', 'Botão deletar Movie no Grid de Movie');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao botão de delete no grid de Movie', 'Usuário Poderá ver e acessar ao botão de delete no grid de Movie ', 'LEITURA', 'CRUD Movie , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Movie', 										'app/movies', 		'SCREEN', 'Pesquisa de  Movies');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso a tela de listagem de  Movie', 'Usuário Poderá ver e acessar a tela de listagem de  Movie ', 'LEITURA', 'CRUD Movie , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Movie', 										'app/newMovie', 	'SCREEN', 'Cadastro  de Movies');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso a tela de cadastro de  Movie', 'Usuário Poderá ver e acessar a tela de cadastro de  Movie ', 'LEITURA', 'CRUD Movie , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Movie', 										'app/editMovie', 	'SCREEN', 'Edição de  Movies');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso a tela de edição de  Movie', 'Usuário Poderá ver e acessar a tela de edição de  Movie ', 'LEITURA', 'CRUD Movie , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Movies', 										'crud/movies', 		'SERVICE', 			'Servico de Movies');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao serviço de listagem de  Movie', 'Usuário Poderá acessar ao serviço de listagem de  Movie ', 'LEITURA', 'CRUD Movie , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao serviço para salvar um novo Movie', 'Usuário Poderá acessar ao serviço para salvar um novo Movie ', 'ESCRITA', 'CRUD Movie , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Movies', 									'crud/movies/all', 		'SERVICE', 			'Servico de TODOS os Movies');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao serviço para listar todos  os Movie', 'Usuário Poderá acessar ao serviço para salvar um novo Movie ', 'LEITURA', 'CRUD Movie , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Movies por filtro', 							'crud/movies/filter', 		'SERVICE', 			'Servico de Movies sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao serviço para listagem por filtro de Movie', 'Usuário Poderá acessar ao serviço para listagem por filtro de Movie ', 'LEITURA', 'CRUD Movie , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Movie específico', 							'crud/movies/[0-9]', 		'SERVICE', 			'Servico para acesso a Movie especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao serviço para listagem de um unico Movie', 'Usuário Poderá acessar ao serviço para listagem de um unico Movie ', 'LEITURA', 'CRUD Movie , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao serviço para atualizacao de um unico Movie', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Movie ', 'ATUALIZACAO', 'CRUD Movie , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Movie. Permissão de acesso ao serviço para deleção/remoção de um unico Movie', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Movie ', 'DELECAO', 'CRUD Movie , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Genre	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Genre', 			'item-list-Genre',	'COMPONENT', 'Menu Genres'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao menu de Genre', 'Usuário Poderá ver e acessar o item de menu de Genre ', 'LEITURA', 'CRUD Genre , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Genre', 	'save-Genre', 		'COMPONENT', 'Botão Salva Genre'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Genre', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Genre ', 'LEITURA', 'CRUD Genre , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Genre', 								'new-Genre', 		'COMPONENT', 'Botão Novo Genre'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao botão de novo no formulario de Genre', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Genre ', 'LEITURA', 'CRUD Genre , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Genre no grid de Genre na Listagem', 			'edit-Genre', 		'COMPONENT', 'Botão Editar Genre no Grid de Genre');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao botão de edição no grid de Genre', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Genre ', 'LEITURA', 'CRUD Genre , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Genre no grid de Genre na Listagem', 			'remove-Genre', 	'COMPONENT', 'Botão deletar Genre no Grid de Genre');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao botão de delete no grid de Genre', 'Usuário Poderá ver e acessar ao botão de delete no grid de Genre ', 'LEITURA', 'CRUD Genre , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Genre', 										'app/genres', 		'SCREEN', 'Pesquisa de  Genres');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso a tela de listagem de  Genre', 'Usuário Poderá ver e acessar a tela de listagem de  Genre ', 'LEITURA', 'CRUD Genre , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Genre', 										'app/newGenre', 	'SCREEN', 'Cadastro  de Genres');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso a tela de cadastro de  Genre', 'Usuário Poderá ver e acessar a tela de cadastro de  Genre ', 'LEITURA', 'CRUD Genre , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Genre', 										'app/editGenre', 	'SCREEN', 'Edição de  Genres');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso a tela de edição de  Genre', 'Usuário Poderá ver e acessar a tela de edição de  Genre ', 'LEITURA', 'CRUD Genre , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Genres', 										'crud/genres', 		'SERVICE', 			'Servico de Genres');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao serviço de listagem de  Genre', 'Usuário Poderá acessar ao serviço de listagem de  Genre ', 'LEITURA', 'CRUD Genre , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao serviço para salvar um novo Genre', 'Usuário Poderá acessar ao serviço para salvar um novo Genre ', 'ESCRITA', 'CRUD Genre , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Genres', 									'crud/genres/all', 		'SERVICE', 			'Servico de TODOS os Genres');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao serviço para listar todos  os Genre', 'Usuário Poderá acessar ao serviço para salvar um novo Genre ', 'LEITURA', 'CRUD Genre , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Genres por filtro', 							'crud/genres/filter', 		'SERVICE', 			'Servico de Genres sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao serviço para listagem por filtro de Genre', 'Usuário Poderá acessar ao serviço para listagem por filtro de Genre ', 'LEITURA', 'CRUD Genre , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Genre específico', 							'crud/genres/[0-9]', 		'SERVICE', 			'Servico para acesso a Genre especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao serviço para listagem de um unico Genre', 'Usuário Poderá acessar ao serviço para listagem de um unico Genre ', 'LEITURA', 'CRUD Genre , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao serviço para atualizacao de um unico Genre', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Genre ', 'ATUALIZACAO', 'CRUD Genre , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Genre. Permissão de acesso ao serviço para deleção/remoção de um unico Genre', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Genre ', 'DELECAO', 'CRUD Genre , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para MovieCast	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de MovieCast', 			'item-list-MovieCast',	'COMPONENT', 'Menu MovieCasts'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao menu de MovieCast', 'Usuário Poderá ver e acessar o item de menu de MovieCast ', 'LEITURA', 'CRUD MovieCast , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de MovieCast', 	'save-MovieCast', 		'COMPONENT', 'Botão Salva MovieCast'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de MovieCast', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de MovieCast ', 'LEITURA', 'CRUD MovieCast , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de MovieCast', 								'new-MovieCast', 		'COMPONENT', 'Botão Novo MovieCast'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao botão de novo no formulario de MovieCast', 'Usuário Poderá ver e acessar ao botão de novo no formulario de MovieCast ', 'LEITURA', 'CRUD MovieCast , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de MovieCast no grid de MovieCast na Listagem', 			'edit-MovieCast', 		'COMPONENT', 'Botão Editar MovieCast no Grid de MovieCast');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao botão de edição no grid de MovieCast', 'Usuário Poderá ver e acessar ao botão de edicao no grid de MovieCast ', 'LEITURA', 'CRUD MovieCast , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar MovieCast no grid de MovieCast na Listagem', 			'remove-MovieCast', 	'COMPONENT', 'Botão deletar MovieCast no Grid de MovieCast');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao botão de delete no grid de MovieCast', 'Usuário Poderá ver e acessar ao botão de delete no grid de MovieCast ', 'LEITURA', 'CRUD MovieCast , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de MovieCast', 										'app/movieCasts', 		'SCREEN', 'Pesquisa de  MovieCasts');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso a tela de listagem de  MovieCast', 'Usuário Poderá ver e acessar a tela de listagem de  MovieCast ', 'LEITURA', 'CRUD MovieCast , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de MovieCast', 										'app/newMovieCast', 	'SCREEN', 'Cadastro  de MovieCasts');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso a tela de cadastro de  MovieCast', 'Usuário Poderá ver e acessar a tela de cadastro de  MovieCast ', 'LEITURA', 'CRUD MovieCast , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de MovieCast', 										'app/editMovieCast', 	'SCREEN', 'Edição de  MovieCasts');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso a tela de edição de  MovieCast', 'Usuário Poderá ver e acessar a tela de edição de  MovieCast ', 'LEITURA', 'CRUD MovieCast , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos MovieCasts', 										'crud/movieCasts', 		'SERVICE', 			'Servico de MovieCasts');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao serviço de listagem de  MovieCast', 'Usuário Poderá acessar ao serviço de listagem de  MovieCast ', 'LEITURA', 'CRUD MovieCast , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao serviço para salvar um novo MovieCast', 'Usuário Poderá acessar ao serviço para salvar um novo MovieCast ', 'ESCRITA', 'CRUD MovieCast , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os MovieCasts', 									'crud/movieCasts/all', 		'SERVICE', 			'Servico de TODOS os MovieCasts');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao serviço para listar todos  os MovieCast', 'Usuário Poderá acessar ao serviço para salvar um novo MovieCast ', 'LEITURA', 'CRUD MovieCast , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos MovieCasts por filtro', 							'crud/movieCasts/filter', 		'SERVICE', 			'Servico de MovieCasts sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao serviço para listagem por filtro de MovieCast', 'Usuário Poderá acessar ao serviço para listagem por filtro de MovieCast ', 'LEITURA', 'CRUD MovieCast , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um MovieCast específico', 							'crud/movieCasts/[0-9]', 		'SERVICE', 			'Servico para acesso a MovieCast especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao serviço para listagem de um unico MovieCast', 'Usuário Poderá acessar ao serviço para listagem de um unico MovieCast ', 'LEITURA', 'CRUD MovieCast , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao serviço para atualizacao de um unico MovieCast', 'Usuário Poderá acessar ao serviço para atualizacao de um unico MovieCast ', 'ATUALIZACAO', 'CRUD MovieCast , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCast. Permissão de acesso ao serviço para deleção/remoção de um unico MovieCast', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico MovieCast ', 'DELECAO', 'CRUD MovieCast , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Language	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Language', 			'item-list-Language',	'COMPONENT', 'Menu Languages'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao menu de Language', 'Usuário Poderá ver e acessar o item de menu de Language ', 'LEITURA', 'CRUD Language , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Language', 	'save-Language', 		'COMPONENT', 'Botão Salva Language'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Language', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Language ', 'LEITURA', 'CRUD Language , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Language', 								'new-Language', 		'COMPONENT', 'Botão Novo Language'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao botão de novo no formulario de Language', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Language ', 'LEITURA', 'CRUD Language , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Language no grid de Language na Listagem', 			'edit-Language', 		'COMPONENT', 'Botão Editar Language no Grid de Language');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao botão de edição no grid de Language', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Language ', 'LEITURA', 'CRUD Language , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Language no grid de Language na Listagem', 			'remove-Language', 	'COMPONENT', 'Botão deletar Language no Grid de Language');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao botão de delete no grid de Language', 'Usuário Poderá ver e acessar ao botão de delete no grid de Language ', 'LEITURA', 'CRUD Language , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Language', 										'app/languages', 		'SCREEN', 'Pesquisa de  Languages');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso a tela de listagem de  Language', 'Usuário Poderá ver e acessar a tela de listagem de  Language ', 'LEITURA', 'CRUD Language , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Language', 										'app/newLanguage', 	'SCREEN', 'Cadastro  de Languages');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso a tela de cadastro de  Language', 'Usuário Poderá ver e acessar a tela de cadastro de  Language ', 'LEITURA', 'CRUD Language , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Language', 										'app/editLanguage', 	'SCREEN', 'Edição de  Languages');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso a tela de edição de  Language', 'Usuário Poderá ver e acessar a tela de edição de  Language ', 'LEITURA', 'CRUD Language , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Languages', 										'crud/languages', 		'SERVICE', 			'Servico de Languages');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao serviço de listagem de  Language', 'Usuário Poderá acessar ao serviço de listagem de  Language ', 'LEITURA', 'CRUD Language , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao serviço para salvar um novo Language', 'Usuário Poderá acessar ao serviço para salvar um novo Language ', 'ESCRITA', 'CRUD Language , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Languages', 									'crud/languages/all', 		'SERVICE', 			'Servico de TODOS os Languages');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao serviço para listar todos  os Language', 'Usuário Poderá acessar ao serviço para salvar um novo Language ', 'LEITURA', 'CRUD Language , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Languages por filtro', 							'crud/languages/filter', 		'SERVICE', 			'Servico de Languages sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao serviço para listagem por filtro de Language', 'Usuário Poderá acessar ao serviço para listagem por filtro de Language ', 'LEITURA', 'CRUD Language , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Language específico', 							'crud/languages/[0-9]', 		'SERVICE', 			'Servico para acesso a Language especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao serviço para listagem de um unico Language', 'Usuário Poderá acessar ao serviço para listagem de um unico Language ', 'LEITURA', 'CRUD Language , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao serviço para atualizacao de um unico Language', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Language ', 'ATUALIZACAO', 'CRUD Language , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Language. Permissão de acesso ao serviço para deleção/remoção de um unico Language', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Language ', 'DELECAO', 'CRUD Language , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Country	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Country', 			'item-list-Country',	'COMPONENT', 'Menu Countrys'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao menu de Country', 'Usuário Poderá ver e acessar o item de menu de Country ', 'LEITURA', 'CRUD Country , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Country', 	'save-Country', 		'COMPONENT', 'Botão Salva Country'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Country', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Country ', 'LEITURA', 'CRUD Country , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Country', 								'new-Country', 		'COMPONENT', 'Botão Novo Country'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao botão de novo no formulario de Country', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Country ', 'LEITURA', 'CRUD Country , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Country no grid de Country na Listagem', 			'edit-Country', 		'COMPONENT', 'Botão Editar Country no Grid de Country');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao botão de edição no grid de Country', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Country ', 'LEITURA', 'CRUD Country , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Country no grid de Country na Listagem', 			'remove-Country', 	'COMPONENT', 'Botão deletar Country no Grid de Country');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao botão de delete no grid de Country', 'Usuário Poderá ver e acessar ao botão de delete no grid de Country ', 'LEITURA', 'CRUD Country , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Country', 										'app/countrys', 		'SCREEN', 'Pesquisa de  Countrys');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso a tela de listagem de  Country', 'Usuário Poderá ver e acessar a tela de listagem de  Country ', 'LEITURA', 'CRUD Country , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Country', 										'app/newCountry', 	'SCREEN', 'Cadastro  de Countrys');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso a tela de cadastro de  Country', 'Usuário Poderá ver e acessar a tela de cadastro de  Country ', 'LEITURA', 'CRUD Country , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Country', 										'app/editCountry', 	'SCREEN', 'Edição de  Countrys');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso a tela de edição de  Country', 'Usuário Poderá ver e acessar a tela de edição de  Country ', 'LEITURA', 'CRUD Country , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Countrys', 										'crud/countrys', 		'SERVICE', 			'Servico de Countrys');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao serviço de listagem de  Country', 'Usuário Poderá acessar ao serviço de listagem de  Country ', 'LEITURA', 'CRUD Country , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao serviço para salvar um novo Country', 'Usuário Poderá acessar ao serviço para salvar um novo Country ', 'ESCRITA', 'CRUD Country , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Countrys', 									'crud/countrys/all', 		'SERVICE', 			'Servico de TODOS os Countrys');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao serviço para listar todos  os Country', 'Usuário Poderá acessar ao serviço para salvar um novo Country ', 'LEITURA', 'CRUD Country , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Countrys por filtro', 							'crud/countrys/filter', 		'SERVICE', 			'Servico de Countrys sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao serviço para listagem por filtro de Country', 'Usuário Poderá acessar ao serviço para listagem por filtro de Country ', 'LEITURA', 'CRUD Country , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Country específico', 							'crud/countrys/[0-9]', 		'SERVICE', 			'Servico para acesso a Country especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao serviço para listagem de um unico Country', 'Usuário Poderá acessar ao serviço para listagem de um unico Country ', 'LEITURA', 'CRUD Country , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao serviço para atualizacao de um unico Country', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Country ', 'ATUALIZACAO', 'CRUD Country , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Country. Permissão de acesso ao serviço para deleção/remoção de um unico Country', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Country ', 'DELECAO', 'CRUD Country , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Keyword	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Keyword', 			'item-list-Keyword',	'COMPONENT', 'Menu Keywords'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao menu de Keyword', 'Usuário Poderá ver e acessar o item de menu de Keyword ', 'LEITURA', 'CRUD Keyword , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Keyword', 	'save-Keyword', 		'COMPONENT', 'Botão Salva Keyword'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Keyword', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Keyword ', 'LEITURA', 'CRUD Keyword , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Keyword', 								'new-Keyword', 		'COMPONENT', 'Botão Novo Keyword'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao botão de novo no formulario de Keyword', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Keyword ', 'LEITURA', 'CRUD Keyword , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Keyword no grid de Keyword na Listagem', 			'edit-Keyword', 		'COMPONENT', 'Botão Editar Keyword no Grid de Keyword');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao botão de edição no grid de Keyword', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Keyword ', 'LEITURA', 'CRUD Keyword , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Keyword no grid de Keyword na Listagem', 			'remove-Keyword', 	'COMPONENT', 'Botão deletar Keyword no Grid de Keyword');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao botão de delete no grid de Keyword', 'Usuário Poderá ver e acessar ao botão de delete no grid de Keyword ', 'LEITURA', 'CRUD Keyword , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Keyword', 										'app/keywords', 		'SCREEN', 'Pesquisa de  Keywords');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso a tela de listagem de  Keyword', 'Usuário Poderá ver e acessar a tela de listagem de  Keyword ', 'LEITURA', 'CRUD Keyword , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Keyword', 										'app/newKeyword', 	'SCREEN', 'Cadastro  de Keywords');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso a tela de cadastro de  Keyword', 'Usuário Poderá ver e acessar a tela de cadastro de  Keyword ', 'LEITURA', 'CRUD Keyword , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Keyword', 										'app/editKeyword', 	'SCREEN', 'Edição de  Keywords');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso a tela de edição de  Keyword', 'Usuário Poderá ver e acessar a tela de edição de  Keyword ', 'LEITURA', 'CRUD Keyword , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Keywords', 										'crud/keywords', 		'SERVICE', 			'Servico de Keywords');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao serviço de listagem de  Keyword', 'Usuário Poderá acessar ao serviço de listagem de  Keyword ', 'LEITURA', 'CRUD Keyword , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao serviço para salvar um novo Keyword', 'Usuário Poderá acessar ao serviço para salvar um novo Keyword ', 'ESCRITA', 'CRUD Keyword , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Keywords', 									'crud/keywords/all', 		'SERVICE', 			'Servico de TODOS os Keywords');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao serviço para listar todos  os Keyword', 'Usuário Poderá acessar ao serviço para salvar um novo Keyword ', 'LEITURA', 'CRUD Keyword , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Keywords por filtro', 							'crud/keywords/filter', 		'SERVICE', 			'Servico de Keywords sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao serviço para listagem por filtro de Keyword', 'Usuário Poderá acessar ao serviço para listagem por filtro de Keyword ', 'LEITURA', 'CRUD Keyword , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Keyword específico', 							'crud/keywords/[0-9]', 		'SERVICE', 			'Servico para acesso a Keyword especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao serviço para listagem de um unico Keyword', 'Usuário Poderá acessar ao serviço para listagem de um unico Keyword ', 'LEITURA', 'CRUD Keyword , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao serviço para atualizacao de um unico Keyword', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Keyword ', 'ATUALIZACAO', 'CRUD Keyword , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Keyword. Permissão de acesso ao serviço para deleção/remoção de um unico Keyword', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Keyword ', 'DELECAO', 'CRUD Keyword , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Gender	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Gender', 			'item-list-Gender',	'COMPONENT', 'Menu Genders'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao menu de Gender', 'Usuário Poderá ver e acessar o item de menu de Gender ', 'LEITURA', 'CRUD Gender , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Gender', 	'save-Gender', 		'COMPONENT', 'Botão Salva Gender'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Gender', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Gender ', 'LEITURA', 'CRUD Gender , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Gender', 								'new-Gender', 		'COMPONENT', 'Botão Novo Gender'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao botão de novo no formulario de Gender', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Gender ', 'LEITURA', 'CRUD Gender , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Gender no grid de Gender na Listagem', 			'edit-Gender', 		'COMPONENT', 'Botão Editar Gender no Grid de Gender');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao botão de edição no grid de Gender', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Gender ', 'LEITURA', 'CRUD Gender , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Gender no grid de Gender na Listagem', 			'remove-Gender', 	'COMPONENT', 'Botão deletar Gender no Grid de Gender');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao botão de delete no grid de Gender', 'Usuário Poderá ver e acessar ao botão de delete no grid de Gender ', 'LEITURA', 'CRUD Gender , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Gender', 										'app/genders', 		'SCREEN', 'Pesquisa de  Genders');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso a tela de listagem de  Gender', 'Usuário Poderá ver e acessar a tela de listagem de  Gender ', 'LEITURA', 'CRUD Gender , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Gender', 										'app/newGender', 	'SCREEN', 'Cadastro  de Genders');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso a tela de cadastro de  Gender', 'Usuário Poderá ver e acessar a tela de cadastro de  Gender ', 'LEITURA', 'CRUD Gender , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Gender', 										'app/editGender', 	'SCREEN', 'Edição de  Genders');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso a tela de edição de  Gender', 'Usuário Poderá ver e acessar a tela de edição de  Gender ', 'LEITURA', 'CRUD Gender , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Genders', 										'crud/genders', 		'SERVICE', 			'Servico de Genders');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao serviço de listagem de  Gender', 'Usuário Poderá acessar ao serviço de listagem de  Gender ', 'LEITURA', 'CRUD Gender , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao serviço para salvar um novo Gender', 'Usuário Poderá acessar ao serviço para salvar um novo Gender ', 'ESCRITA', 'CRUD Gender , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Genders', 									'crud/genders/all', 		'SERVICE', 			'Servico de TODOS os Genders');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao serviço para listar todos  os Gender', 'Usuário Poderá acessar ao serviço para salvar um novo Gender ', 'LEITURA', 'CRUD Gender , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Genders por filtro', 							'crud/genders/filter', 		'SERVICE', 			'Servico de Genders sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao serviço para listagem por filtro de Gender', 'Usuário Poderá acessar ao serviço para listagem por filtro de Gender ', 'LEITURA', 'CRUD Gender , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Gender específico', 							'crud/genders/[0-9]', 		'SERVICE', 			'Servico para acesso a Gender especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao serviço para listagem de um unico Gender', 'Usuário Poderá acessar ao serviço para listagem de um unico Gender ', 'LEITURA', 'CRUD Gender , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao serviço para atualizacao de um unico Gender', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Gender ', 'ATUALIZACAO', 'CRUD Gender , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Gender. Permissão de acesso ao serviço para deleção/remoção de um unico Gender', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Gender ', 'DELECAO', 'CRUD Gender , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para MovieCrew	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de MovieCrew', 			'item-list-MovieCrew',	'COMPONENT', 'Menu MovieCrews'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao menu de MovieCrew', 'Usuário Poderá ver e acessar o item de menu de MovieCrew ', 'LEITURA', 'CRUD MovieCrew , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de MovieCrew', 	'save-MovieCrew', 		'COMPONENT', 'Botão Salva MovieCrew'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de MovieCrew', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de MovieCrew ', 'LEITURA', 'CRUD MovieCrew , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de MovieCrew', 								'new-MovieCrew', 		'COMPONENT', 'Botão Novo MovieCrew'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao botão de novo no formulario de MovieCrew', 'Usuário Poderá ver e acessar ao botão de novo no formulario de MovieCrew ', 'LEITURA', 'CRUD MovieCrew , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de MovieCrew no grid de MovieCrew na Listagem', 			'edit-MovieCrew', 		'COMPONENT', 'Botão Editar MovieCrew no Grid de MovieCrew');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao botão de edição no grid de MovieCrew', 'Usuário Poderá ver e acessar ao botão de edicao no grid de MovieCrew ', 'LEITURA', 'CRUD MovieCrew , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar MovieCrew no grid de MovieCrew na Listagem', 			'remove-MovieCrew', 	'COMPONENT', 'Botão deletar MovieCrew no Grid de MovieCrew');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao botão de delete no grid de MovieCrew', 'Usuário Poderá ver e acessar ao botão de delete no grid de MovieCrew ', 'LEITURA', 'CRUD MovieCrew , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de MovieCrew', 										'app/movieCrews', 		'SCREEN', 'Pesquisa de  MovieCrews');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso a tela de listagem de  MovieCrew', 'Usuário Poderá ver e acessar a tela de listagem de  MovieCrew ', 'LEITURA', 'CRUD MovieCrew , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de MovieCrew', 										'app/newMovieCrew', 	'SCREEN', 'Cadastro  de MovieCrews');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso a tela de cadastro de  MovieCrew', 'Usuário Poderá ver e acessar a tela de cadastro de  MovieCrew ', 'LEITURA', 'CRUD MovieCrew , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de MovieCrew', 										'app/editMovieCrew', 	'SCREEN', 'Edição de  MovieCrews');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso a tela de edição de  MovieCrew', 'Usuário Poderá ver e acessar a tela de edição de  MovieCrew ', 'LEITURA', 'CRUD MovieCrew , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos MovieCrews', 										'crud/movieCrews', 		'SERVICE', 			'Servico de MovieCrews');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao serviço de listagem de  MovieCrew', 'Usuário Poderá acessar ao serviço de listagem de  MovieCrew ', 'LEITURA', 'CRUD MovieCrew , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao serviço para salvar um novo MovieCrew', 'Usuário Poderá acessar ao serviço para salvar um novo MovieCrew ', 'ESCRITA', 'CRUD MovieCrew , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os MovieCrews', 									'crud/movieCrews/all', 		'SERVICE', 			'Servico de TODOS os MovieCrews');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao serviço para listar todos  os MovieCrew', 'Usuário Poderá acessar ao serviço para salvar um novo MovieCrew ', 'LEITURA', 'CRUD MovieCrew , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos MovieCrews por filtro', 							'crud/movieCrews/filter', 		'SERVICE', 			'Servico de MovieCrews sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao serviço para listagem por filtro de MovieCrew', 'Usuário Poderá acessar ao serviço para listagem por filtro de MovieCrew ', 'LEITURA', 'CRUD MovieCrew , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um MovieCrew específico', 							'crud/movieCrews/[0-9]', 		'SERVICE', 			'Servico para acesso a MovieCrew especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao serviço para listagem de um unico MovieCrew', 'Usuário Poderá acessar ao serviço para listagem de um unico MovieCrew ', 'LEITURA', 'CRUD MovieCrew , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao serviço para atualizacao de um unico MovieCrew', 'Usuário Poderá acessar ao serviço para atualizacao de um unico MovieCrew ', 'ATUALIZACAO', 'CRUD MovieCrew , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de MovieCrew. Permissão de acesso ao serviço para deleção/remoção de um unico MovieCrew', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico MovieCrew ', 'DELECAO', 'CRUD MovieCrew , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Company	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Company', 			'item-list-Company',	'COMPONENT', 'Menu Companys'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao menu de Company', 'Usuário Poderá ver e acessar o item de menu de Company ', 'LEITURA', 'CRUD Company , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Company', 	'save-Company', 		'COMPONENT', 'Botão Salva Company'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Company', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Company ', 'LEITURA', 'CRUD Company , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Company', 								'new-Company', 		'COMPONENT', 'Botão Novo Company'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao botão de novo no formulario de Company', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Company ', 'LEITURA', 'CRUD Company , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Company no grid de Company na Listagem', 			'edit-Company', 		'COMPONENT', 'Botão Editar Company no Grid de Company');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao botão de edição no grid de Company', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Company ', 'LEITURA', 'CRUD Company , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Company no grid de Company na Listagem', 			'remove-Company', 	'COMPONENT', 'Botão deletar Company no Grid de Company');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao botão de delete no grid de Company', 'Usuário Poderá ver e acessar ao botão de delete no grid de Company ', 'LEITURA', 'CRUD Company , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Company', 										'app/companys', 		'SCREEN', 'Pesquisa de  Companys');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso a tela de listagem de  Company', 'Usuário Poderá ver e acessar a tela de listagem de  Company ', 'LEITURA', 'CRUD Company , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Company', 										'app/newCompany', 	'SCREEN', 'Cadastro  de Companys');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso a tela de cadastro de  Company', 'Usuário Poderá ver e acessar a tela de cadastro de  Company ', 'LEITURA', 'CRUD Company , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Company', 										'app/editCompany', 	'SCREEN', 'Edição de  Companys');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso a tela de edição de  Company', 'Usuário Poderá ver e acessar a tela de edição de  Company ', 'LEITURA', 'CRUD Company , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Companys', 										'crud/companys', 		'SERVICE', 			'Servico de Companys');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao serviço de listagem de  Company', 'Usuário Poderá acessar ao serviço de listagem de  Company ', 'LEITURA', 'CRUD Company , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao serviço para salvar um novo Company', 'Usuário Poderá acessar ao serviço para salvar um novo Company ', 'ESCRITA', 'CRUD Company , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Companys', 									'crud/companys/all', 		'SERVICE', 			'Servico de TODOS os Companys');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao serviço para listar todos  os Company', 'Usuário Poderá acessar ao serviço para salvar um novo Company ', 'LEITURA', 'CRUD Company , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Companys por filtro', 							'crud/companys/filter', 		'SERVICE', 			'Servico de Companys sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao serviço para listagem por filtro de Company', 'Usuário Poderá acessar ao serviço para listagem por filtro de Company ', 'LEITURA', 'CRUD Company , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Company específico', 							'crud/companys/[0-9]', 		'SERVICE', 			'Servico para acesso a Company especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao serviço para listagem de um unico Company', 'Usuário Poderá acessar ao serviço para listagem de um unico Company ', 'LEITURA', 'CRUD Company , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao serviço para atualizacao de um unico Company', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Company ', 'ATUALIZACAO', 'CRUD Company , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Company. Permissão de acesso ao serviço para deleção/remoção de um unico Company', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Company ', 'DELECAO', 'CRUD Company , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Person	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Person', 			'item-list-Person',	'COMPONENT', 'Menu Persons'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao menu de Person', 'Usuário Poderá ver e acessar o item de menu de Person ', 'LEITURA', 'CRUD Person , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Person', 	'save-Person', 		'COMPONENT', 'Botão Salva Person'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Person', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Person ', 'LEITURA', 'CRUD Person , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Person', 								'new-Person', 		'COMPONENT', 'Botão Novo Person'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao botão de novo no formulario de Person', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Person ', 'LEITURA', 'CRUD Person , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Person no grid de Person na Listagem', 			'edit-Person', 		'COMPONENT', 'Botão Editar Person no Grid de Person');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao botão de edição no grid de Person', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Person ', 'LEITURA', 'CRUD Person , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Person no grid de Person na Listagem', 			'remove-Person', 	'COMPONENT', 'Botão deletar Person no Grid de Person');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao botão de delete no grid de Person', 'Usuário Poderá ver e acessar ao botão de delete no grid de Person ', 'LEITURA', 'CRUD Person , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Person', 										'app/persons', 		'SCREEN', 'Pesquisa de  Persons');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso a tela de listagem de  Person', 'Usuário Poderá ver e acessar a tela de listagem de  Person ', 'LEITURA', 'CRUD Person , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Person', 										'app/newPerson', 	'SCREEN', 'Cadastro  de Persons');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso a tela de cadastro de  Person', 'Usuário Poderá ver e acessar a tela de cadastro de  Person ', 'LEITURA', 'CRUD Person , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Person', 										'app/editPerson', 	'SCREEN', 'Edição de  Persons');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso a tela de edição de  Person', 'Usuário Poderá ver e acessar a tela de edição de  Person ', 'LEITURA', 'CRUD Person , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Persons', 										'crud/persons', 		'SERVICE', 			'Servico de Persons');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao serviço de listagem de  Person', 'Usuário Poderá acessar ao serviço de listagem de  Person ', 'LEITURA', 'CRUD Person , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao serviço para salvar um novo Person', 'Usuário Poderá acessar ao serviço para salvar um novo Person ', 'ESCRITA', 'CRUD Person , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Persons', 									'crud/persons/all', 		'SERVICE', 			'Servico de TODOS os Persons');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao serviço para listar todos  os Person', 'Usuário Poderá acessar ao serviço para salvar um novo Person ', 'LEITURA', 'CRUD Person , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Persons por filtro', 							'crud/persons/filter', 		'SERVICE', 			'Servico de Persons sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao serviço para listagem por filtro de Person', 'Usuário Poderá acessar ao serviço para listagem por filtro de Person ', 'LEITURA', 'CRUD Person , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Person específico', 							'crud/persons/[0-9]', 		'SERVICE', 			'Servico para acesso a Person especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao serviço para listagem de um unico Person', 'Usuário Poderá acessar ao serviço para listagem de um unico Person ', 'LEITURA', 'CRUD Person , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao serviço para atualizacao de um unico Person', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Person ', 'ATUALIZACAO', 'CRUD Person , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Person. Permissão de acesso ao serviço para deleção/remoção de um unico Person', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Person ', 'DELECAO', 'CRUD Person , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Usuário	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Usuário', 			'item-list-User',	'COMPONENT', 'Menu Usuários'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao menu de Usuário', 'Usuário Poderá ver e acessar o item de menu de Usuário ', 'LEITURA', 'CRUD Usuário , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Usuário', 	'save-User', 		'COMPONENT', 'Botão Salva Usuário'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Usuário', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Usuário ', 'LEITURA', 'CRUD Usuário , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Usuário', 								'new-User', 		'COMPONENT', 'Botão Novo Usuário'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao botão de novo no formulario de Usuário', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Usuário ', 'LEITURA', 'CRUD Usuário , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Usuário no grid de Usuário na Listagem', 			'edit-User', 		'COMPONENT', 'Botão Editar Usuário no Grid de Usuário');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao botão de edição no grid de Usuário', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Usuário ', 'LEITURA', 'CRUD Usuário , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Usuário no grid de Usuário na Listagem', 			'remove-User', 	'COMPONENT', 'Botão deletar Usuário no Grid de Usuário');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao botão de delete no grid de Usuário', 'Usuário Poderá ver e acessar ao botão de delete no grid de Usuário ', 'LEITURA', 'CRUD Usuário , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Usuário', 										'app/users', 		'SCREEN', 'Pesquisa de  Usuários');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso a tela de listagem de  Usuário', 'Usuário Poderá ver e acessar a tela de listagem de  Usuário ', 'LEITURA', 'CRUD Usuário , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Usuário', 										'app/newUser', 	'SCREEN', 'Cadastro  de Usuários');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso a tela de cadastro de  Usuário', 'Usuário Poderá ver e acessar a tela de cadastro de  Usuário ', 'LEITURA', 'CRUD Usuário , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Usuário', 										'app/editUser', 	'SCREEN', 'Edição de  Usuários');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso a tela de edição de  Usuário', 'Usuário Poderá ver e acessar a tela de edição de  Usuário ', 'LEITURA', 'CRUD Usuário , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Usuários', 										'crud/users', 		'SERVICE', 			'Servico de Usuários');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço de listagem de  Usuário', 'Usuário Poderá acessar ao serviço de listagem de  Usuário ', 'LEITURA', 'CRUD Usuário , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para salvar um novo Usuário', 'Usuário Poderá acessar ao serviço para salvar um novo Usuário ', 'ESCRITA', 'CRUD Usuário , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Usuários', 									'crud/users/all', 		'SERVICE', 			'Servico de TODOS os Usuários');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para listar todos  os Usuário', 'Usuário Poderá acessar ao serviço para salvar um novo Usuário ', 'LEITURA', 'CRUD Usuário , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Usuários por filtro', 							'crud/users/filter', 		'SERVICE', 			'Servico de Usuários sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para listagem por filtro de Usuário', 'Usuário Poderá acessar ao serviço para listagem por filtro de Usuário ', 'LEITURA', 'CRUD Usuário , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Usuário específico', 							'crud/users/[0-9]', 		'SERVICE', 			'Servico para acesso a Usuário especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para listagem de um unico Usuário', 'Usuário Poderá acessar ao serviço para listagem de um unico Usuário ', 'LEITURA', 'CRUD Usuário , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para atualizacao de um unico Usuário', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Usuário ', 'ATUALIZACAO', 'CRUD Usuário , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Usuário. Permissão de acesso ao serviço para deleção/remoção de um unico Usuário', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Usuário ', 'DELECAO', 'CRUD Usuário , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Papel	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Papel', 			'item-list-Role',	'COMPONENT', 'Menu Papels'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao menu de Papel', 'Usuário Poderá ver e acessar o item de menu de Papel ', 'LEITURA', 'CRUD Papel , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Papel', 	'save-Role', 		'COMPONENT', 'Botão Salva Papel'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Papel', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Papel ', 'LEITURA', 'CRUD Papel , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Papel', 								'new-Role', 		'COMPONENT', 'Botão Novo Papel'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao botão de novo no formulario de Papel', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Papel ', 'LEITURA', 'CRUD Papel , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Papel no grid de Papel na Listagem', 			'edit-Role', 		'COMPONENT', 'Botão Editar Papel no Grid de Papel');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao botão de edição no grid de Papel', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Papel ', 'LEITURA', 'CRUD Papel , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Papel no grid de Papel na Listagem', 			'remove-Role', 	'COMPONENT', 'Botão deletar Papel no Grid de Papel');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao botão de delete no grid de Papel', 'Usuário Poderá ver e acessar ao botão de delete no grid de Papel ', 'LEITURA', 'CRUD Papel , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Papel', 										'app/roles', 		'SCREEN', 'Pesquisa de  Papels');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso a tela de listagem de  Papel', 'Usuário Poderá ver e acessar a tela de listagem de  Papel ', 'LEITURA', 'CRUD Papel , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Papel', 										'app/newRole', 	'SCREEN', 'Cadastro  de Papels');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso a tela de cadastro de  Papel', 'Usuário Poderá ver e acessar a tela de cadastro de  Papel ', 'LEITURA', 'CRUD Papel , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Papel', 										'app/editRole', 	'SCREEN', 'Edição de  Papels');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso a tela de edição de  Papel', 'Usuário Poderá ver e acessar a tela de edição de  Papel ', 'LEITURA', 'CRUD Papel , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Papels', 										'crud/roles', 		'SERVICE', 			'Servico de Papels');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço de listagem de  Papel', 'Usuário Poderá acessar ao serviço de listagem de  Papel ', 'LEITURA', 'CRUD Papel , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para salvar um novo Papel', 'Usuário Poderá acessar ao serviço para salvar um novo Papel ', 'ESCRITA', 'CRUD Papel , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Papels', 									'crud/roles/all', 		'SERVICE', 			'Servico de TODOS os Papels');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para listar todos  os Papel', 'Usuário Poderá acessar ao serviço para salvar um novo Papel ', 'LEITURA', 'CRUD Papel , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Papels por filtro', 							'crud/roles/filter', 		'SERVICE', 			'Servico de Papels sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para listagem por filtro de Papel', 'Usuário Poderá acessar ao serviço para listagem por filtro de Papel ', 'LEITURA', 'CRUD Papel , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Papel específico', 							'crud/roles/[0-9]', 		'SERVICE', 			'Servico para acesso a Papel especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para listagem de um unico Papel', 'Usuário Poderá acessar ao serviço para listagem de um unico Papel ', 'LEITURA', 'CRUD Papel , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para atualizacao de um unico Papel', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Papel ', 'ATUALIZACAO', 'CRUD Papel , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Papel. Permissão de acesso ao serviço para deleção/remoção de um unico Papel', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Papel ', 'DELECAO', 'CRUD Papel , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Permissão	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Permissão', 			'item-list-Permission',	'COMPONENT', 'Menu Permissãos'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao menu de Permissão', 'Usuário Poderá ver e acessar o item de menu de Permissão ', 'LEITURA', 'CRUD Permissão , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Permissão', 	'save-Permission', 		'COMPONENT', 'Botão Salva Permissão'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Permissão', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Permissão ', 'LEITURA', 'CRUD Permissão , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Permissão', 								'new-Permission', 		'COMPONENT', 'Botão Novo Permissão'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao botão de novo no formulario de Permissão', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Permissão ', 'LEITURA', 'CRUD Permissão , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Permissão no grid de Permissão na Listagem', 			'edit-Permission', 		'COMPONENT', 'Botão Editar Permissão no Grid de Permissão');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao botão de edição no grid de Permissão', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Permissão ', 'LEITURA', 'CRUD Permissão , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Permissão no grid de Permissão na Listagem', 			'remove-Permission', 	'COMPONENT', 'Botão deletar Permissão no Grid de Permissão');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao botão de delete no grid de Permissão', 'Usuário Poderá ver e acessar ao botão de delete no grid de Permissão ', 'LEITURA', 'CRUD Permissão , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Permissão', 										'app/permissions', 		'SCREEN', 'Pesquisa de  Permissãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso a tela de listagem de  Permissão', 'Usuário Poderá ver e acessar a tela de listagem de  Permissão ', 'LEITURA', 'CRUD Permissão , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Permissão', 										'app/newPermission', 	'SCREEN', 'Cadastro  de Permissãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso a tela de cadastro de  Permissão', 'Usuário Poderá ver e acessar a tela de cadastro de  Permissão ', 'LEITURA', 'CRUD Permissão , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Permissão', 										'app/editPermission', 	'SCREEN', 'Edição de  Permissãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso a tela de edição de  Permissão', 'Usuário Poderá ver e acessar a tela de edição de  Permissão ', 'LEITURA', 'CRUD Permissão , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Permissãos', 										'crud/permissions', 		'SERVICE', 			'Servico de Permissãos');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço de listagem de  Permissão', 'Usuário Poderá acessar ao serviço de listagem de  Permissão ', 'LEITURA', 'CRUD Permissão , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para salvar um novo Permissão', 'Usuário Poderá acessar ao serviço para salvar um novo Permissão ', 'ESCRITA', 'CRUD Permissão , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Permissãos', 									'crud/permissions/all', 		'SERVICE', 			'Servico de TODOS os Permissãos');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para listar todos  os Permissão', 'Usuário Poderá acessar ao serviço para salvar um novo Permissão ', 'LEITURA', 'CRUD Permissão , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Permissãos por filtro', 							'crud/permissions/filter', 		'SERVICE', 			'Servico de Permissãos sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para listagem por filtro de Permissão', 'Usuário Poderá acessar ao serviço para listagem por filtro de Permissão ', 'LEITURA', 'CRUD Permissão , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Permissão específico', 							'crud/permissions/[0-9]', 		'SERVICE', 			'Servico para acesso a Permissão especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para listagem de um unico Permissão', 'Usuário Poderá acessar ao serviço para listagem de um unico Permissão ', 'LEITURA', 'CRUD Permissão , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para atualizacao de um unico Permissão', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Permissão ', 'ATUALIZACAO', 'CRUD Permissão , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Permissão. Permissão de acesso ao serviço para deleção/remoção de um unico Permissão', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Permissão ', 'DELECAO', 'CRUD Permissão , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Grupo de Permissões	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Grupo de Permissões', 			'item-list-Group',	'COMPONENT', 'Menu Grupo de Permissõess'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao menu de Grupo de Permissões', 'Usuário Poderá ver e acessar o item de menu de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Grupo de Permissões', 	'save-Group', 		'COMPONENT', 'Botão Salva Grupo de Permissões'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Grupo de Permissões', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Grupo de Permissões', 								'new-Group', 		'COMPONENT', 'Botão Novo Grupo de Permissões'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao botão de novo no formulario de Grupo de Permissões', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Grupo de Permissões no grid de Grupo de Permissões na Listagem', 			'edit-Group', 		'COMPONENT', 'Botão Editar Grupo de Permissões no Grid de Grupo de Permissões');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao botão de edição no grid de Grupo de Permissões', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Grupo de Permissões no grid de Grupo de Permissões na Listagem', 			'remove-Group', 	'COMPONENT', 'Botão deletar Grupo de Permissões no Grid de Grupo de Permissões');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao botão de delete no grid de Grupo de Permissões', 'Usuário Poderá ver e acessar ao botão de delete no grid de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Grupo de Permissões', 										'app/groups', 		'SCREEN', 'Pesquisa de  Grupo de Permissõess');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso a tela de listagem de  Grupo de Permissões', 'Usuário Poderá ver e acessar a tela de listagem de  Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Grupo de Permissões', 										'app/newGroup', 	'SCREEN', 'Cadastro  de Grupo de Permissõess');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso a tela de cadastro de  Grupo de Permissões', 'Usuário Poderá ver e acessar a tela de cadastro de  Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Grupo de Permissões', 										'app/editGroup', 	'SCREEN', 'Edição de  Grupo de Permissõess');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso a tela de edição de  Grupo de Permissões', 'Usuário Poderá ver e acessar a tela de edição de  Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Grupo de Permissõess', 										'crud/groups', 		'SERVICE', 			'Servico de Grupo de Permissõess');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço de listagem de  Grupo de Permissões', 'Usuário Poderá acessar ao serviço de listagem de  Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para salvar um novo Grupo de Permissões', 'Usuário Poderá acessar ao serviço para salvar um novo Grupo de Permissões ', 'ESCRITA', 'CRUD Grupo de Permissões , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Grupo de Permissõess', 									'crud/groups/all', 		'SERVICE', 			'Servico de TODOS os Grupo de Permissõess');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para listar todos  os Grupo de Permissões', 'Usuário Poderá acessar ao serviço para salvar um novo Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Grupo de Permissõess por filtro', 							'crud/groups/filter', 		'SERVICE', 			'Servico de Grupo de Permissõess sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para listagem por filtro de Grupo de Permissões', 'Usuário Poderá acessar ao serviço para listagem por filtro de Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Grupo de Permissões específico', 							'crud/groups/[0-9]', 		'SERVICE', 			'Servico para acesso a Grupo de Permissões especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para listagem de um unico Grupo de Permissões', 'Usuário Poderá acessar ao serviço para listagem de um unico Grupo de Permissões ', 'LEITURA', 'CRUD Grupo de Permissões , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para atualizacao de um unico Grupo de Permissões', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Grupo de Permissões ', 'ATUALIZACAO', 'CRUD Grupo de Permissões , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Grupo de Permissões. Permissão de acesso ao serviço para deleção/remoção de um unico Grupo de Permissões', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Grupo de Permissões ', 'DELECAO', 'CRUD Grupo de Permissões , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

-- registros de autorização para Item	
	-- campos de tela
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Item de menu principal para tela de pesquisa de Item', 			'item-list-Item',	'COMPONENT', 'Menu Items'					);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao menu de Item', 'Usuário Poderá ver e acessar o item de menu de Item ', 'LEITURA', 'CRUD Item , item Menu ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botôes de salvar e salvar e continuar no formulario de Item', 	'save-Item', 		'COMPONENT', 'Botão Salva Item'			);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao botão de salvar e salvar e continuar no formulario de Item', 'Usuário Poderá ver e acessar o botão de de salvar e salvar e continuar no formulario de Item ', 'LEITURA', 'CRUD Item , botão salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de novo na listagem de Item', 								'new-Item', 		'COMPONENT', 'Botão Novo Item'				);
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao botão de novo no formulario de Item', 'Usuário Poderá ver e acessar ao botão de novo no formulario de Item ', 'LEITURA', 'CRUD Item , botão novo ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de Edição de Item no grid de Item na Listagem', 			'edit-Item', 		'COMPONENT', 'Botão Editar Item no Grid de Item');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao botão de edição no grid de Item', 'Usuário Poderá ver e acessar ao botão de edicao no grid de Item ', 'LEITURA', 'CRUD Item , botão edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Botão de deletar Item no grid de Item na Listagem', 			'remove-Item', 	'COMPONENT', 'Botão deletar Item no Grid de Item');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao botão de delete no grid de Item', 'Usuário Poderá ver e acessar ao botão de delete no grid de Item ', 'LEITURA', 'CRUD Item , botão delete ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

    --telas
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de listagem de Item', 										'app/items', 		'SCREEN', 'Pesquisa de  Items');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso a tela de listagem de  Item', 'Usuário Poderá ver e acessar a tela de listagem de  Item ', 'LEITURA', 'CRUD Item , tela listagem  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de Cadastro de Item', 										'app/newItem', 	'SCREEN', 'Cadastro  de Items');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso a tela de cadastro de  Item', 'Usuário Poderá ver e acessar a tela de cadastro de  Item ', 'LEITURA', 'CRUD Item , tela de cadastro  ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Tela de edição de Item', 										'app/editItem', 	'SCREEN', 'Edição de  Items');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso a tela de edição de  Item', 'Usuário Poderá ver e acessar a tela de edição de  Item ', 'LEITURA', 'CRUD Item , tela de edicao ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	
	-- servicos
	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Items', 										'crud/items', 		'SERVICE', 			'Servico de Items');  -- ler e escrever
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço de listagem de  Item', 'Usuário Poderá acessar ao serviço de listagem de  Item ', 'LEITURA', 'CRUD Item , servico listar varios ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para salvar um novo Item', 'Usuário Poderá acessar ao serviço para salvar um novo Item ', 'ESCRITA', 'CRUD Item , servico salvar ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso TODOS os Items', 									'crud/items/all', 		'SERVICE', 			'Servico de TODOS os Items');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para listar todos  os Item', 'Usuário Poderá acessar ao serviço para salvar um novo Item ', 'LEITURA', 'CRUD Item , servico listar todos ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso aos Items por filtro', 							'crud/items/filter', 		'SERVICE', 			'Servico de Items sob filtro');
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para listagem por filtro de Item', 'Usuário Poderá acessar ao serviço para listagem por filtro de Item ', 'LEITURA', 'CRUD Item , servico listar por filtro ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	INSERT INTO item(id,     description, identifier, type, name) VALUES	((select max(id) + 1 from item), 'Url de acesso a um Item específico', 							'crud/items/[0-9]', 		'SERVICE', 			'Servico para acesso a Item especifico'); --GET, PUT e DELETE 
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para listagem de um unico Item', 'Usuário Poderá acessar ao serviço para listagem de um unico Item ', 'LEITURA', 'CRUD Item , servico listar um unico ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para atualizacao de um unico Item', 'Usuário Poderá acessar ao serviço para atualizacao de um unico Item ', 'ATUALIZACAO', 'CRUD Item , servico atualização ');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	
	INSERT INTO persmission((select max(id) + 1 from persmission),  name, description,  operation, tags) VALUES ('Cadastro de Item. Permissão de acesso ao serviço para deleção/remoção de um unico Item', 'Usuário Poderá acessar ao serviço para deleção/remoção de um unico Item ', 'DELECAO', 'CRUD Item , servico remoção deleção');
	INSERT INTO permission_item(permission_id, item_id)VALUES ((select max(id)  from persmission), (select max(id) from item));	

	
import DepartmentController from './presentation/http/controllers/DepartmentController';
import MovieController from './presentation/http/controllers/MovieController';
import GenreController from './presentation/http/controllers/GenreController';
import MovieCastController from './presentation/http/controllers/MovieCastController';
import LanguageController from './presentation/http/controllers/LanguageController';
import CountryController from './presentation/http/controllers/CountryController';
import KeywordController from './presentation/http/controllers/KeywordController';
import GenderController from './presentation/http/controllers/GenderController';
import MovieCrewController from './presentation/http/controllers/MovieCrewController';
import CompanyController from './presentation/http/controllers/CompanyController';
import PersonController from './presentation/http/controllers/PersonController';
import UserController from './presentation/http/controllers/UserController';
import RoleController from './presentation/http/controllers/RoleController';
import PermissionController from './presentation/http/controllers/PermissionController';
import GroupController from './presentation/http/controllers/GroupController';
import ItemController from './presentation/http/controllers/ItemController';
appExpress.use('/departments', DepartmentController)
appExpress.use('/movies', MovieController)
appExpress.use('/genres', GenreController)
appExpress.use('/movieCasts', MovieCastController)
appExpress.use('/languages', LanguageController)
appExpress.use('/countrys', CountryController)
appExpress.use('/keywords', KeywordController)
appExpress.use('/genders', GenderController)
appExpress.use('/movieCrews', MovieCrewController)
appExpress.use('/companys', CompanyController)
appExpress.use('/persons', PersonController)
appExpress.use('/users', UserController)
appExpress.use('/roles', RoleController)
appExpress.use('/permissions', PermissionController)
appExpress.use('/groups', GroupController)
appExpress.use('/items', ItemController)

